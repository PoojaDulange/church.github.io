{"version":3,"file":"static/js/1544.a1e52877.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard1.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport {\r\n  CAvatar,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  cibCcAmex,\r\n  cibCcApplePay,\r\n  cibCcMastercard,\r\n  cibCcPaypal,\r\n  cibCcStripe,\r\n  cibCcVisa,\r\n  cibGoogle,\r\n  cibFacebook,\r\n  cibLinkedin,\r\n  cifBr,\r\n  cifEs,\r\n  cifFr,\r\n  cifIn,\r\n  cifPl,\r\n  cifUs,\r\n  cibTwitter,\r\n  cilCloudDownload,\r\n  cilPeople,\r\n  cilUser,\r\n  cilUserFemale,\r\n} from '@coreui/icons'\r\n\r\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\r\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\r\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\r\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\r\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\r\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\r\n\r\nimport WidgetsBrand from '../widgets/WidgetsBrand'\r\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\r\n\r\nconst Dashboard = () => {\r\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\r\n\r\n  const progressExample = [\r\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\r\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\r\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\r\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\r\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\r\n  ]\r\n\r\n  const progressGroupExample1 = [\r\n    { title: 'Monday', value1: 34, value2: 78 },\r\n    { title: 'Tuesday', value1: 56, value2: 94 },\r\n    { title: 'Wednesday', value1: 12, value2: 67 },\r\n    { title: 'Thursday', value1: 43, value2: 91 },\r\n    { title: 'Friday', value1: 22, value2: 73 },\r\n    { title: 'Saturday', value1: 53, value2: 82 },\r\n    { title: 'Sunday', value1: 9, value2: 69 },\r\n  ]\r\n\r\n  const progressGroupExample2 = [\r\n    { title: 'Male', icon: cilUser, value: 53 },\r\n    { title: 'Female', icon: cilUserFemale, value: 43 },\r\n  ]\r\n\r\n  const progressGroupExample3 = [\r\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\r\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\r\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\r\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\r\n  ]\r\n\r\n  const tableExample = [\r\n    {\r\n      avatar: { src: avatar1, status: 'success' },\r\n      user: {\r\n        name: 'Yiorgos Avraamu',\r\n        new: true,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'USA', flag: cifUs },\r\n      usage: {\r\n        value: 50,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'success',\r\n      },\r\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\r\n      activity: '10 sec ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar2, status: 'danger' },\r\n      user: {\r\n        name: 'Avram Tarasios',\r\n        new: false,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'Brazil', flag: cifBr },\r\n      usage: {\r\n        value: 22,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'info',\r\n      },\r\n      payment: { name: 'Visa', icon: cibCcVisa },\r\n      activity: '5 minutes ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar3, status: 'warning' },\r\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\r\n      country: { name: 'India', flag: cifIn },\r\n      usage: {\r\n        value: 74,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'warning',\r\n      },\r\n      payment: { name: 'Stripe', icon: cibCcStripe },\r\n      activity: '1 hour ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar4, status: 'secondary' },\r\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\r\n      country: { name: 'France', flag: cifFr },\r\n      usage: {\r\n        value: 98,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'danger',\r\n      },\r\n      payment: { name: 'PayPal', icon: cibCcPaypal },\r\n      activity: 'Last month',\r\n    },\r\n    {\r\n      avatar: { src: avatar5, status: 'success' },\r\n      user: {\r\n        name: 'Agapetus Tadeáš',\r\n        new: true,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'Spain', flag: cifEs },\r\n      usage: {\r\n        value: 22,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'primary',\r\n      },\r\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\r\n      activity: 'Last week',\r\n    },\r\n    {\r\n      avatar: { src: avatar6, status: 'danger' },\r\n      user: {\r\n        name: 'Friderik Dávid',\r\n        new: true,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'Poland', flag: cifPl },\r\n      usage: {\r\n        value: 43,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'success',\r\n      },\r\n      payment: { name: 'Amex', icon: cibCcAmex },\r\n      activity: 'Last week',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <WidgetsDropdown />\r\n      {/* <CCard className=\"mb-4\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm={5}>\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Traffic\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\r\n            </CCol>\r\n            <CCol sm={7} className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-end\">\r\n                <CIcon icon={cilCloudDownload} />\r\n              </CButton>\r\n              <CButtonGroup className=\"float-end me-3\">\r\n                {['Day', 'Month', 'Year'].map((value) => (\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    key={value}\r\n                    className=\"mx-0\"\r\n                    active={value === 'Month'}\r\n                  >\r\n                    {value}\r\n                  </CButton>\r\n                ))}\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CChartLine\r\n            style={{ height: '300px', marginTop: '40px' }}\r\n            data={{\r\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n              datasets: [\r\n                {\r\n                  label: 'My First dataset',\r\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\r\n                  borderColor: getStyle('--cui-info'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\r\n                  borderWidth: 2,\r\n                  data: [\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                  ],\r\n                  fill: true,\r\n                },\r\n                {\r\n                  label: 'My Second dataset',\r\n                  backgroundColor: 'transparent',\r\n                  borderColor: getStyle('--cui-success'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\r\n                  borderWidth: 2,\r\n                  data: [\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                  ],\r\n                },\r\n                {\r\n                  label: 'My Third dataset',\r\n                  backgroundColor: 'transparent',\r\n                  borderColor: getStyle('--cui-danger'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\r\n                  borderWidth: 1,\r\n                  borderDash: [8, 5],\r\n                  data: [65, 65, 65, 65, 65, 65, 65],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  display: false,\r\n                },\r\n              },\r\n              scales: {\r\n                x: {\r\n                  grid: {\r\n                    drawOnChartArea: false,\r\n                  },\r\n                },\r\n                y: {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 5,\r\n                    stepSize: Math.ceil(250 / 5),\r\n                    max: 250,\r\n                  },\r\n                },\r\n              },\r\n              elements: {\r\n                line: {\r\n                  tension: 0.4,\r\n                },\r\n                point: {\r\n                  radius: 0,\r\n                  hitRadius: 10,\r\n                  hoverRadius: 4,\r\n                  hoverBorderWidth: 3,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\r\n            {progressExample.map((item, index) => (\r\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\r\n                <div className=\"text-medium-emphasis\">{item.title}</div>\r\n                <strong>\r\n                  {item.value} ({item.percent}%)\r\n                </strong>\r\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CCardFooter>\r\n      </CCard> */}\r\n      <div className=\"mt-5\">\r\n        <WidgetsBrand withCharts />\r\n      </div>\r\n\r\n      {/* <CRow>\r\n        <CCol xs>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\r\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\r\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\r\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n                  {progressGroupExample1.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-prepend\">\r\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"info\" value={item.value1} />\r\n                        <CProgress thin color=\"danger\" value={item.value2} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\r\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Organic</div>\r\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n\r\n                  {progressGroupExample2.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"warning\" value={item.value} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  <div className=\"mb-5\"></div>\r\n\r\n                  {progressGroupExample3.map((item, index) => (\r\n                    <div className=\"progress-group\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">\r\n                          {item.value}{' '}\r\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"success\" value={item.percent} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <br />\r\n\r\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell className=\"text-center\">\r\n                      <CIcon icon={cilPeople} />\r\n                    </CTableHeaderCell>\r\n                    <CTableHeaderCell>User</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\r\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\r\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {tableExample.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div>{item.user.name}</div>\r\n                        <div className=\"small text-medium-emphasis\">\r\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\r\n                          {item.user.registered}\r\n                        </div>\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"clearfix\">\r\n                          <div className=\"float-start\">\r\n                            <strong>{item.usage.value}%</strong>\r\n                          </div>\r\n                          <div className=\"float-end\">\r\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\r\n                          </div>\r\n                        </div>\r\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"small text-medium-emphasis\">Last login</div>\r\n                        <strong>{item.activity}</strong>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))}\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow className=\"my-5\">\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\nimport { Link } from 'react-router-dom'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/organization-table/\" style={{ textDecoration: 'none' }}>\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"secondary\"\n            value={<h4 className=\"my-3\">#500</h4>}\n            title={<h4 className=\"my-3\">Organization</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartLine\n            //     className=\"mt-3 mx-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'transparent',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           pointBackgroundColor: getStyle('--cui-primary'),\n            //           data: [65, 59, 84, 84, 51, 55, 40],\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       maintainAspectRatio: false,\n            //       scales: {\n            //         x: {\n            //           grid: {\n            //             display: false,\n            //             drawBorder: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //         y: {\n            //           min: 30,\n            //           max: 89,\n            //           display: false,\n            //           grid: {\n            //             display: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //       },\n            //       elements: {\n            //         line: {\n            //           borderWidth: 1,\n            //           tension: 0.4,\n            //         },\n            //         point: {\n            //           radius: 4,\n            //           hitRadius: 10,\n            //           hoverRadius: 4,\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/people-table/\" style={{ textDecoration: 'none' }}>\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"info\"\n            value={<h4 className=\"my-3\">#1500</h4>}\n            title={<h4 className=\"my-3\">Individual</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartLine\n            //     className=\"mt-3 mx-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'transparent',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           pointBackgroundColor: getStyle('--cui-info'),\n            //           data: [1, 18, 9, 17, 34, 22, 11],\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       maintainAspectRatio: false,\n            //       scales: {\n            //         x: {\n            //           grid: {\n            //             display: false,\n            //             drawBorder: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //         y: {\n            //           min: -9,\n            //           max: 39,\n            //           display: false,\n            //           grid: {\n            //             display: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //       },\n            //       elements: {\n            //         line: {\n            //           borderWidth: 1,\n            //         },\n            //         point: {\n            //           radius: 4,\n            //           hitRadius: 10,\n            //           hoverRadius: 4,\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/contribution-table\" style={{ textDecoration: 'none' }}>\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"warning\"\n            value={<h4 className=\"my-3\">$2000</h4>}\n            title={<h4 className=\"my-3\">Contribution</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartLine\n            //     className=\"mt-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'rgba(255,255,255,.2)',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           data: [78, 81, 80, 45, 34, 12, 40],\n            //           fill: true,\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       maintainAspectRatio: false,\n            //       scales: {\n            //         x: {\n            //           display: false,\n            //         },\n            //         y: {\n            //           display: false,\n            //         },\n            //       },\n            //       elements: {\n            //         line: {\n            //           borderWidth: 2,\n            //           tension: 0.4,\n            //         },\n            //         point: {\n            //           radius: 0,\n            //           hitRadius: 10,\n            //           hoverRadius: 4,\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/pledged-category/\" style={{ textDecoration: 'none' }}>\n          {' '}\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"danger\"\n            value={<h4 className=\"my-3\">#3</h4>}\n            title={<h4 className=\"my-3\">Pledged Categories</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartBar\n            //     className=\"mt-3 mx-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: [\n            //         'January',\n            //         'February',\n            //         'March',\n            //         'April',\n            //         'May',\n            //         'June',\n            //         'July',\n            //         'August',\n            //         'September',\n            //         'October',\n            //         'November',\n            //         'December',\n            //         'January',\n            //         'February',\n            //         'March',\n            //         'April',\n            //       ],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'rgba(255,255,255,.2)',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n            //           barPercentage: 0.6,\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       maintainAspectRatio: false,\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       scales: {\n            //         x: {\n            //           grid: {\n            //             display: false,\n            //             drawTicks: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //         y: {\n            //           grid: {\n            //             display: false,\n            //             drawBorder: false,\n            //             drawTicks: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["cilUser","cilUserFemale","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","cifUs","cibCcMastercard","cifBr","cibCcVisa","cifIn","cibCcStripe","cifFr","cibCcPaypal","cifEs","cibCcApplePay","cifPl","cibCcAmex","className","withCharts","chartOptions","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","maintainAspectRatio","plugins","legend","display","scales","x","y","sm","lg","chart","type","data","labels","datasets","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","icon","height","values","title","value","style","color","cilCalendar","to","textDecoration"],"sourceRoot":""}