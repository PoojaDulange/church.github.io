{"version":3,"file":"static/js/4326.10dfcaaa.chunk.js","mappings":"4QA0HA,UApHwB,WACtB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAgDF,EAAAA,EAAAA,UAAS,IAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACMC,EAAO,CACX,CACEC,KAAM,YACNC,YAAY,qCAEd,CACED,KAAM,OACNC,YAAY,6DAGd,CAAED,KAAM,eAAgBC,YAAa,sDAEjCC,EAAS,CACb,CACEF,MAAM,4CACNG,SAAU,SAACC,GAAD,OAASA,EAAIJ,MACvBK,UAAU,GAEZ,CACEL,MAAM,4CACNG,SAAU,SAACC,GAAD,OAASA,EAAIH,aACvBK,KAAM,GAER,GACA,CACEN,MAAM,uCACNO,KAAM,SAACH,GAAD,OACJ,SAAC,KAAD,CAAMI,GAAG,qBAAT,UACE,mBAAQC,UAAU,kBAAlB,wBAURC,EAAAA,EAAAA,YAAU,WACRZ,EAAoBC,GAEpB,IAAMY,EAASZ,EAAKa,QAAO,SAACC,GAC1B,OAAOA,EAAOb,KAAKc,cAAcC,MAAMpB,EAAOmB,kBAGhDhB,EAAoBa,KACnB,CAAChB,IAwBJ,OACE,gBAAKc,UAAU,cAAf,UACE,UAAC,KAAD,CAAOA,UAAU,OAAjB,WACE,SAAC,KAAD,CAAaA,UAAU,UAAvB,UACE,eAAIA,UAAU,aAAd,iCAEF,UAAC,KAAD,YACE,iBAAKA,UAAU,YAAf,WACE,iBAAKA,UAAU,0BAAf,WACE,SAAC,KAAD,CAAMD,GAAG,qBAAT,UACE,SAAC,KAAD,CAASQ,MAAM,WAAf,+BAEF,SAAC,KAAD,CAAMR,GAAG,GAAT,UACE,SAAC,KAAD,CAASS,QApCJ,WACjB,IACMC,EAAW,IAAIC,IAAAA,UACfC,EAAQF,EAASG,aAAa,YACpCD,EAAME,QAAU,CAEd,CAAEC,OAAQ,OAAQC,IAAK,OAAQC,MAAO,IACtC,CAAEF,OAAQ,cAAeC,IAAK,cAAeC,MAAO,KAEtDL,EAAMM,OAAO,CACX1B,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,cAEpBiB,EAASS,KACNC,YAbc,eAcdC,MAAK,WACJC,QAAQC,IAAI,mBAEbC,OAAM,SAACC,GACNH,QAAQC,IAAIE,OAiBJ,0BAGJ,gBAAKxB,UAAU,gBAAf,UACE,kBACEyB,KAAK,OACLC,YAAY,cACZ1B,UAAU,4BACV2B,MAAOzC,EACP0C,SAAU,SAACC,GAAD,OAAO1C,EAAU0C,EAAEC,OAAOH,gBAI1C,SAAC,KAAD,CACEd,QAASpB,EACTH,KAAMF,EACN2C,aAlEW,CACnBC,UAAW,CACTC,MAAO,CAAEC,WAAY,QAAS3B,MAAO,WAiE/B4B,YAAU,EACVC,aAAW,EACXC,wBAAwB,SACxBC,gBAAc,EACdC,yBAAuB,EACvBC,kBAAgB","sources":["views/forms/pledged-category/PledgedCategory.js"],"sourcesContent":["import { CCol, CRow, CWidgetStatsA } from '@coreui/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Link } from 'react-router-dom'\r\nimport { CButton, CCard, CCardBody, CCardHeader } from '@coreui/react'\r\nimport ExcelJS from 'exceljs'\r\nconst PledgedCategory = () => {\r\n  const [search, setSearch] = useState('')\r\n  const [filteredChurches, setFilteredChurches] = useState([])\r\n  const data = [\r\n    {\r\n      name: 'Education',\r\n      description: `The purpose of pledge education. `,\r\n    },\r\n    {\r\n      name: 'Food',\r\n      description: `\r\n    The Cool Food Pledge helps your organization commit`,\r\n    },\r\n    { name: 'Construction', description: 'The contractor party is obliged to deliver a work' },\r\n  ]\r\n  const column = [\r\n    {\r\n      name: <strong>Pledge Name</strong>,\r\n      selector: (row) => row.name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: <strong>Description</strong>,\r\n      selector: (row) => row.description,\r\n      grow: 3,\r\n    },\r\n    {},\r\n    {\r\n      name: <strong>Action</strong>,\r\n      cell: (row) => (\r\n        <Link to=\"/forms/pledge-add/\">\r\n          <button className=\"btn btn-primary\">Edit</button>\r\n        </Link>\r\n      ),\r\n    },\r\n  ]\r\n  const customStyles = {\r\n    headCells: {\r\n      style: { background: 'black', color: 'white' },\r\n    },\r\n  }\r\n  useEffect(() => {\r\n    setFilteredChurches(data)\r\n\r\n    const result = data.filter((church) => {\r\n      return church.name.toLowerCase().match(search.toLowerCase())\r\n    })\r\n\r\n    setFilteredChurches(result)\r\n  }, [search])\r\n  const exportData = () => {\r\n    const fileName = 'simple.xlsx'\r\n    const workbook = new ExcelJS.Workbook()\r\n    const sheet = workbook.addWorksheet('my sheet')\r\n    sheet.columns = [\r\n      //   { header: \"id\", key: \"id\", width: 10 },\r\n      { header: 'name', key: 'name', width: 32 },\r\n      { header: 'description', key: 'description', width: 32 },\r\n    ]\r\n    sheet.addRow({\r\n      name: data.name,\r\n      description: data.description,\r\n    })\r\n    workbook.xlsx\r\n      .writeBuffer(fileName)\r\n      .then(() => {\r\n        console.log('file created')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <CCard className=\"mt-2\">\r\n        <CCardHeader className=\"bg-dark\">\r\n          <h3 className=\"text-white\">Pledged Category</h3>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <div className=\"d-md-flex\">\r\n            <div className=\"d-grid gap-2 d-md-flex \">\r\n              <Link to=\"/forms/pledge-add/\">\r\n                <CButton color=\"primary \">Add New Pledge</CButton>\r\n              </Link>\r\n              <Link to=\"\">\r\n                <CButton onClick={exportData}>Export</CButton>\r\n              </Link>\r\n            </div>\r\n            <div className=\" ms-auto mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search Here\"\r\n                className=\"w-100 form-control ms-500\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <DataTable\r\n            columns={column}\r\n            data={filteredChurches}\r\n            customStyles={customStyles}\r\n            pagination\r\n            fixedHeader\r\n            fixedHeaderScrollHeight=\"1000px\"\r\n            selectableRows\r\n            selectableRowsHighlight\r\n            highlightOnHover\r\n          />\r\n        </CCardBody>\r\n      </CCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PledgedCategory\r\n"],"names":["useState","search","setSearch","filteredChurches","setFilteredChurches","data","name","description","column","selector","row","sortable","grow","cell","to","className","useEffect","result","filter","church","toLowerCase","match","color","onClick","workbook","ExcelJS","sheet","addWorksheet","columns","header","key","width","addRow","xlsx","writeBuffer","then","console","log","catch","err","type","placeholder","value","onChange","e","target","customStyles","headCells","style","background","pagination","fixedHeader","fixedHeaderScrollHeight","selectableRows","selectableRowsHighlight","highlightOnHover"],"sourceRoot":""}