{"version":3,"file":"static/js/853.2ab00856.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React from 'react'\nimport image from '../../assets/images/website.png'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport { useLocation } from 'react-router-dom'\n\n// eslint-disable-next-line react/prop-types\nconst Dashboard = () => {\n  // console.log(user1)\n\n  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2021',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2021 - Jul 10, 2021',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n  return (\n    <div className=\"text-center\">\n      <img src={image} alt=\"Construction\" style={{ width: '100%', height: 'auto' }}></img>\n      {/* <WidgetsDropdown />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <CChartLine\n            style={{ height: '300px', marginTop: '40px' }}\n            data={{\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n              datasets: [\n                {\n                  label: 'My First dataset',\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n                  borderColor: getStyle('--cui-info'),\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                  fill: true,\n                },\n                {\n                  label: 'My Second dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-success'),\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\n                  borderWidth: 2,\n                  data: [\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                    random(50, 200),\n                  ],\n                },\n                {\n                  label: 'My Third dataset',\n                  backgroundColor: 'transparent',\n                  borderColor: getStyle('--cui-danger'),\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\n                  borderWidth: 1,\n                  borderDash: [8, 5],\n                  data: [65, 65, 65, 65, 65, 65, 65],\n                },\n              ],\n            }}\n            options={{\n              maintainAspectRatio: false,\n              plugins: {\n                legend: {\n                  display: false,\n                },\n              },\n              scales: {\n                x: {\n                  grid: {\n                    drawOnChartArea: false,\n                  },\n                },\n                y: {\n                  ticks: {\n                    beginAtZero: true,\n                    maxTicksLimit: 5,\n                    stepSize: Math.ceil(250 / 5),\n                    max: 250,\n                  },\n                },\n              },\n              elements: {\n                line: {\n                  tension: 0.4,\n                },\n                point: {\n                  radius: 0,\n                  hitRadius: 10,\n                  hoverRadius: 4,\n                  hoverBorderWidth: 3,\n                },\n              },\n            }}\n          />\n        </CCardBody>\n        <CCardFooter>\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\n            {progressExample.map((item, index) => (\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\n                <div className=\"text-medium-emphasis\">{item.title}</div>\n                <strong>\n                  {item.value} ({item.percent}%)\n                </strong>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n\n      <WidgetsBrand withCharts />\n\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol sm={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-medium-emphasis small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell>User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-medium-emphasis\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"clearfix\">\n                          <div className=\"float-start\">\n                            <strong>{item.usage.value}%</strong>\n                          </div>\n                          <div className=\"float-end\">\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-medium-emphasis\">Last login</div>\n                        <strong>{item.activity}</strong>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow> */}\n    </div>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = ({ withCharts }) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow className=\"my-5\">\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n\n      <CCol sm={6} lg={3}>\n        <CWidgetStatsD\n          className=\"mb-4\"\n          color=\"warning\"\n          {...(withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React from 'react'\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\nimport { Link } from 'react-router-dom'\n\nconst WidgetsDropdown = () => {\n  return (\n    <CRow>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/organization-table/\" style={{ textDecoration: 'none' }}>\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"secondary\"\n            value={<h4 className=\"my-3\">#500</h4>}\n            title={<h4 className=\"my-3\">Organization</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartLine\n            //     className=\"mt-3 mx-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'transparent',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           pointBackgroundColor: getStyle('--cui-primary'),\n            //           data: [65, 59, 84, 84, 51, 55, 40],\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       maintainAspectRatio: false,\n            //       scales: {\n            //         x: {\n            //           grid: {\n            //             display: false,\n            //             drawBorder: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //         y: {\n            //           min: 30,\n            //           max: 89,\n            //           display: false,\n            //           grid: {\n            //             display: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //       },\n            //       elements: {\n            //         line: {\n            //           borderWidth: 1,\n            //           tension: 0.4,\n            //         },\n            //         point: {\n            //           radius: 4,\n            //           hitRadius: 10,\n            //           hoverRadius: 4,\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/people-table/\" style={{ textDecoration: 'none' }}>\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"info\"\n            value={<h4 className=\"my-3\">#1500</h4>}\n            title={<h4 className=\"my-3\">Individual</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartLine\n            //     className=\"mt-3 mx-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'transparent',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           pointBackgroundColor: getStyle('--cui-info'),\n            //           data: [1, 18, 9, 17, 34, 22, 11],\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       maintainAspectRatio: false,\n            //       scales: {\n            //         x: {\n            //           grid: {\n            //             display: false,\n            //             drawBorder: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //         y: {\n            //           min: -9,\n            //           max: 39,\n            //           display: false,\n            //           grid: {\n            //             display: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //       },\n            //       elements: {\n            //         line: {\n            //           borderWidth: 1,\n            //         },\n            //         point: {\n            //           radius: 4,\n            //           hitRadius: 10,\n            //           hoverRadius: 4,\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/contribution-table\" style={{ textDecoration: 'none' }}>\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"warning\"\n            value={<h4 className=\"my-3\">$2000</h4>}\n            title={<h4 className=\"my-3\">Contribution</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartLine\n            //     className=\"mt-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'rgba(255,255,255,.2)',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           data: [78, 81, 80, 45, 34, 12, 40],\n            //           fill: true,\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       maintainAspectRatio: false,\n            //       scales: {\n            //         x: {\n            //           display: false,\n            //         },\n            //         y: {\n            //           display: false,\n            //         },\n            //       },\n            //       elements: {\n            //         line: {\n            //           borderWidth: 2,\n            //           tension: 0.4,\n            //         },\n            //         point: {\n            //           radius: 0,\n            //           hitRadius: 10,\n            //           hoverRadius: 4,\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n      <CCol sm={6} lg={3}>\n        <Link to=\"/forms/pledged-category/\" style={{ textDecoration: 'none' }}>\n          {' '}\n          <CWidgetStatsA\n            className=\"my-4\"\n            color=\"danger\"\n            value={<h4 className=\"my-3\">#3</h4>}\n            title={<h4 className=\"my-3\">Pledged Categories</h4>}\n            // action={\n            //   <CDropdown alignment=\"end\">\n            //     <CDropdownToggle color=\"transparent\" caret={false} className=\"p-0\">\n            //       <CIcon icon={cilOptions} className=\"text-high-emphasis-inverse\" />\n            //     </CDropdownToggle>\n            //     <CDropdownMenu>\n            //       <CDropdownItem>Action</CDropdownItem>\n            //       <CDropdownItem>Another action</CDropdownItem>\n            //       <CDropdownItem>Something else here...</CDropdownItem>\n            //       <CDropdownItem disabled>Disabled action</CDropdownItem>\n            //     </CDropdownMenu>\n            //   </CDropdown>\n            // }\n            // chart={\n            //   <CChartBar\n            //     className=\"mt-3 mx-3\"\n            //     style={{ height: '70px' }}\n            //     data={{\n            //       labels: [\n            //         'January',\n            //         'February',\n            //         'March',\n            //         'April',\n            //         'May',\n            //         'June',\n            //         'July',\n            //         'August',\n            //         'September',\n            //         'October',\n            //         'November',\n            //         'December',\n            //         'January',\n            //         'February',\n            //         'March',\n            //         'April',\n            //       ],\n            //       datasets: [\n            //         {\n            //           label: 'My First dataset',\n            //           backgroundColor: 'rgba(255,255,255,.2)',\n            //           borderColor: 'rgba(255,255,255,.55)',\n            //           data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n            //           barPercentage: 0.6,\n            //         },\n            //       ],\n            //     }}\n            //     options={{\n            //       maintainAspectRatio: false,\n            //       plugins: {\n            //         legend: {\n            //           display: false,\n            //         },\n            //       },\n            //       scales: {\n            //         x: {\n            //           grid: {\n            //             display: false,\n            //             drawTicks: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //         y: {\n            //           grid: {\n            //             display: false,\n            //             drawBorder: false,\n            //             drawTicks: false,\n            //           },\n            //           ticks: {\n            //             display: false,\n            //           },\n            //         },\n            //       },\n            //     }}\n            //   />\n            // }\n          />\n        </Link>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n"],"names":["cilUser","cilUserFemale","cibGoogle","cibFacebook","cibTwitter","cibLinkedin","cifUs","cibCcMastercard","cifBr","cibCcVisa","cifIn","cibCcStripe","cifFr","cibCcPaypal","cifEs","cibCcApplePay","cifPl","cibCcAmex","className","src","image","alt","style","width","height","withCharts","chartOptions","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","maintainAspectRatio","plugins","legend","display","scales","x","y","sm","lg","chart","type","data","labels","datasets","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","options","icon","values","title","value","color","cilCalendar","to","textDecoration"],"sourceRoot":""}